import BuilderWrapper from "@/components/client/builder/shared/builderWrapper"
import type { Metadata } from "next"
import React from "react"
import { prisma } from "@repo/db"

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
}

interface LayoutParams {
	params: Promise<{ id: string }>
	children: React.ReactNode
}

export default async function RootLayout({ params, children }: LayoutParams) {
	const { id } = await params

	const data = await prisma.builder.findUnique({
		where: { sessionId: id },
		include: {
			user: true,
			builderProcess: {
				include: {
					stages: {
						include: {
							category: {
								include: {
									category: true,
								},
							},
							channel: {
								include: {
									channel: true,
								},
							},
							role: {
								include: {
									role: true,
								},
							},
						},
					},
				},
			},
			materials: true,
			metrics: true,
		},
	})

	if (!data) {
		throw new Error("This session builder does not exist")
	}
	return (
		<>
			<BuilderWrapper id={id} data={data}>
				{children}
			</BuilderWrapper>
		</>
	)
}
