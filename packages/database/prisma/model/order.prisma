model Order {
  id               String          @id @unique
  dateCreate       DateTime     @default(now())
  userId           String     
  orderPaymentLink String?
  promoCodeId String?
  user             User         @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
  events           OrderEvent[]
  products         OrderProduct[]
  promoCode   PromoCode?   @relation(fields: [promoCodeId], references: [code], onDelete: Cascade, onUpdate: Cascade)
}

model OrderProduct {
  id        Int    @id @default(autoincrement())
  offerId String
  price Int
  priceAfterDiscount Int
  orderId String
  offer Offer @relation(fields: [offerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([offerId, orderId])
}

model OrderEvent {
  id        Int         @id @default(autoincrement())
  orderId String 
  status    OrderStatus @default(NEW)
  date      DateTime    @default(now())
  order     Order       @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([orderId])
}
